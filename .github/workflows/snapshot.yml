name: Build snapshot

on:
  workflow_call:
    inputs:
      cargo-dependencies:
        description: "Cargo dependencies map"
        type: string
        default: "null"
      ref:
        description: "git ref to checkout to"
        type: string
        default: "main"
    outputs:
      cargo-version:
        description: "Cargo snapshot version"
        value: ${{ jobs.snapshot.outputs.version }}

env:
  FORCE_COLOR: true
  CI: true

jobs:
  snapshot:
    name: "Build crates"
    runs-on: builder
    timeout-minutes: 60

    outputs:
      version: "${{ steps.snapshot.outputs.version }}"

    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          repository: fluencelabs/decider
          ref: ${{ inputs.ref }}

      - name: Setup rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install fluence-cli
        run: npm i -g @fluencelabs/cli@0.11.1

      - name: Set dependencies
        if: inputs.cargo-dependencies != 'null'
        uses: fluencelabs/github-actions/cargo-set-dependency@main
        with:
          dependencies: ${{ inputs.cargo-dependencies }}
          path: src/distro

      - name: Build distro
        env:
          FLUENCE_USER_DIR: "${{ github.workspace }}/tmp/.fluence"
        run: ./build.sh

      - name: Import secrets
        uses: hashicorp/vault-action@v2.7.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/cargo-registry/users/ci token | CARGO_REGISTRIES_FLUENCE_TOKEN

      - name: Generate snapshot version
        id: version
        uses: fluencelabs/github-actions/generate-snapshot-id@main

      - name: Publish crate snapshots
        id: snapshot
        uses: fluencelabs/github-actions/cargo-publish-snapshot@main
        with:
          id: ${{ steps.version.outputs.id }}
          path: src/distro

      - name: Cleanup
        if: always()
        run: rm -rf tmp ~/.fluence
