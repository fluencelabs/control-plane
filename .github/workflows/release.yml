name: "release"

on:
  push:
    branches:
      - "main"

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"

env:
  FORCE_COLOR: true
  CI: true

jobs:
  release-please:
    runs-on: ubuntu-latest

    outputs:
      release-created: ${{ steps.release.outputs['release_created'] }}
      tag-name: ${{ steps.release.outputs['tag_name'] }}
      version: ${{ steps.release.outputs['version'] }}
      pr: ${{ steps.release.outputs['pr'] }}

    steps:
      - name: Run release-please
        id: release
        uses: google-github-actions/release-please-action@v3
        with:
          token: ${{ secrets.FLUENCEBOT_RELEASE_PLEASE_PAT }}
          command: manifest
          config-file: .github/release-please/config.json
          manifest-file: .github/release-please/manifest.json

      - name: Show output from release-please
        if: steps.release.outputs.releases_created
        env:
          RELEASE_PLEASE_OUTPUT: ${{ toJSON(steps.release.outputs) }}
        run: echo "${RELEASE_PLEASE_OUTPUT}" | jq

  connector:
    runs-on: builder

    needs: release-please
    if: needs.release-please.outputs.release-created

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install fluence-cli
        run: npm i -g @fluencelabs/cli@unstable

      - name: Install ipfs
        uses: nahsi/setup-ipfs@v1

      - name: Create builtin distribution package
        run: ./builtin-package/package.sh

      - name: Calculate SHA256
        id: sha
        run: |
          # Calculate sha256
          du -hs connector.tar.gz
          sha256sum connector.tar.gz
          sha=($(sha256sum connector.tar.gz))
          echo "sha256=${sha}" >> $GITHUB_OUTPUT

      - name: Upload package to checks
        uses: actions/upload-artifact@v3
        with:
          name: connector.tar.gz
          path: connector.tar.gz

      - name: Upload package to release
        if: needs.release-please.outputs.release-created
        uses: softprops/action-gh-release@v1
        with:
          files: connector.tar.gz
          tag_name: ${{ needs.release-please.outputs.tag-name }}

      - name: Update version in node-distro repo
        if: needs.release-please.outputs.release-created
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: update_service
          repo: fluencelabs/node-distro
          ref: "main"
          token: ${{ secrets.PERSONAL_TOKEN }}
          inputs: '{
            "name": "connector",
            "version": "${{ needs.release-please.outputs.version }}",
            "url": "https://github.com/fluencelabs/control-plane/releases/download/${{ needs.release-please.outputs.tag-name }}/connector.tar.gz",
            "sha256": "${{ steps.sha.outputs.sha256 }}"
          }'

  slack:
    if: always()
    name: "Notify"
    runs-on: ubuntu-latest

    needs:
      - release-please
      - connector

    permissions:
      contents: read
      id-token: write

    steps:
      - uses: lwhiteley/dependent-jobs-result-check@v1
        id: status
        with:
          statuses: failure
          dependencies: ${{ toJSON(needs) }}

      - name: Log output
        run: |
          echo "statuses:" "${{ steps.status.outputs.statuses }}"
          echo "jobs:" "${{ steps.status.outputs.jobs }}"
          echo "found any?:" "${{ steps.status.outputs.found }}"

      - name: Import secrets
        uses: hashicorp/vault-action@v2.5.0
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/slack/release-please webhook | SLACK_WEBHOOK_URL

      - uses: ravsamhq/notify-slack-action@v2
        if: steps.status.outputs.found == 'true'
        with:
          status: "failure"
          notification_title: "*{workflow}* has {status_message}"
          message_format: "${{ steps.status.outputs.jobs }} {status_message} in <{repo_url}|{repo}>"
          footer: "<{run_url}>"
