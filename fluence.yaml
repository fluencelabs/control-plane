# yaml-language-server: $schema=.fluence/schemas/fluence.json

# Documentation: https://github.com/fluencelabs/cli/tree/main/docs/configs/fluence.md
# Defines Fluence Project
# Most importantly - what exactly you want to deploy and how
# You can use `fluence init` command to generate a template for new Fluence project

# config version
version: 5

# This is like the "main" Aqua file, but
# mostly it just points to the vague location of the code
#
# Theoretically, only that file and its imports (including transitives) will be compiled.
# But in practice it seems to be unstable, changing unpredictably.
aquaInputPath: src/aqua/decider/poll.aqua

# To fight the aforementioned unpredictability, I set these imports explicitly.
# I consider this a temporary hack to hotfix bug with compilation scopes, until it is fixed.
aquaImports:
  - src/aqua
  - src/aqua/decider
  - src/aqua/chain
  - src/aqua/fluence

dependencies:
  npm:
    "@fluencelabs/aqua-ipfs": 0.5.17
    "@fluencelabs/aqua-lib": 0.8.1
    "@fluencelabs/spell": 0.5.31
    "@fluencelabs/installation-spell": 0.5.31
  cargo:
    marine: 0.14.0
    mrepl: 0.21.3

# Here I define services. Can have as many as I want. Right now it's just 'chain_connector'.
services:
  # this is the service name, it can be anything. after deploy will become an alias.
  chain_connector:
    # this is the path to directory with 'service.yaml'
    get: src/services/chain-connector

# Here I define spells. Can have as many as I want, right now it's just 'decider'
spells:
  # spell name. after deploy will become an alias.
  decider:
    # path to directory containing 'spell.yaml'
    get: src/aqua
