module JoinDeal declares join_deal

import PeerSpell from "@fluencelabs/spell/api.aqua"
import Spell, TriggerConfig from "@fluencelabs/spell/spell_service.aqua"

import deal_log from "../fluence/spell.aqua"
import get_worker_settings, WorkerArgs, WorkerSettings from "../fluence/worker.aqua"
import DealState from "../decider/deal_storage.aqua"
import DealId, SpellId, WorkerId, CID, Block from "../types.aqua"
import Json from "../fluence/peer.aqua"

import DealCreated from "services.aqua"

import DealWorker from "@fluencelabs/aqua-lib/workers.aqua"
import Srv from "@fluencelabs/aqua-lib/builtin.aqua"

use "../fluence/worker.aqua" as Worker

func install_deal_spell(deal_id: DealId, cid: CID, settings: WorkerSettings) -> string:
    args = WorkerArgs(deal_id = deal_id, worker_def_cid = cid, ipfs = settings.ipfs)
    worker_spell_id <- PeerSpell.install(settings.script, args, settings.config)
    Srv.add_alias("worker-spell", worker_spell_id)
    <- worker_spell_id

-- TODO: what should happen if join_deal has failed? We might never receive it again
--       Probably should store failed deals, and then retry them a few times?
func join_deal(spell_id: SpellId, block: string, deal_id: DealId, app_cid: CID) -> ?WorkerId, ?string:
    log = (msg: ‚ä§):
        deal_log(spell_id, deal_id, msg)

    log(["joining a deal from_block", block])
    worker_id: *WorkerId
    error: *string
    try:
        id <- Worker.create(spell_id, deal_id)
        if id != nil:
            worker_id <<- id!
    catch e:
        error <<- Json.stringify(["error creating worker", e])
        log(["error creating worker", e])

    if worker_id != nil:
        settings <- get_worker_settings(spell_id)
        if settings != nil:
            on worker_id!:
                try:
                    try:
                        deal_spell <- Srv.resolve_alias("worker-spell")
                        log(["resolved existing worker-spell", deal_spell])
                    otherwise:
                        deal_spell <- install_deal_spell(deal_id, app_cid, settings!)
                        log(["created deal spell", deal_spell])
                    catch e:
                        error <<- Json.stringify(["error installing deal spell", e])
                        log(["error installing deal spell", e])
                catch e:
                    error <<- Json.stringify(["cannot create deal spell", e.message])
                    log(["cannot create deal spell, deal join failed", e.message])
        else:
            error <<- Json.stringify(["error reading worker settings"])
            log(["error reading worker settings, deal join failed"])


    <- worker_id, error
