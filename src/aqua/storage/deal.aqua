aqua DealStorage declares *

import Spell from "@fluencelabs/spell/spell_service.aqua"

import DealId, TxHash from "../types.aqua"
import Json from "../fluence/peer.aqua"
import "../fluence/spell.aqua"
import DEAL_STORAGE_DEALS, deal_tx_hash_key from "../consts.aqua"

func store_deal(deal_id: DealId, tx_hash: TxHash):
    Spell "spell" 

    -- Save TX_HASH of the deal
    set_string(deal_tx_hash_key(deal_id), tx_hash)

    -- Save the deal to the list of all installed deals
    result <- Spell.list_push_string(DEAL_STORAGE_DEALS, deal_id)
    if !result.success:
        deal_log(deal_id, ["Can't store deal_id in storage:", result])

func remove_deal(deal_id: DealId):
    Spell "spell"

    -- First, remove the aux data of the deal
    remove(deal_tx_hash_key(deal_id))

    -- And only then remove it from the list
    result <- Spell.list_remove_string(DEAL_STORAGE_DEALS, deal_id)
    if !result.success:
        deal_log(deal_id, ["Can't remove deal_id from storage:", result])

func get_deals() -> []DealId:
    Spell "spell"
    result: *[]DealId
    deals <- list_get(DEAL_STORAGE_DEALS)
    if deals == nil:
        result <<- []
    else:
        result <<- deals!
    <- result!

func get_tx(deal_id: DealId) -> ?TxHash:
    Spell "spell"
    <- get_string(deal_tx_hash_key(deal_id))
