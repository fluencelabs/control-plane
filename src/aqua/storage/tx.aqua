aqua TxStorage declares *

import list_push, list_remove, list_get from "../fluence/spell.aqua" 
import Json from "../fluence/peer.aqua"
import TXS_KEY, TXS_STATUS_KEY from "../consts.aqua"
import SpellId, TxHash from "../types.aqua"
import spell_log from "../fluence/spell.aqua"

data WorkerTxInfo:
  deal_id: string
  tx_hash: TxHash 

service JsonWorkerTxInfo("json"):
    parse(str: string) -> WorkerTxInfo

func store_tx(spell_id: SpellId, tx_info: WorkerTxInfo):
    list_push(spell_id, TXS_KEY, tx_info)

func remove_tx(spell_id: SpellId, tx_info: WorkerTxInfo):
    list_remove(spell_id, TXS_KEY, tx_info)

func get_txs(spell_id: SpellId) -> []WorkerTxInfo:
    txs <- list_get(spell_id, TXS_KEY)

    infos: *WorkerTxInfo
    if txs != nil:
        for tx <- txs!:
            try:
                infos <- JsonWorkerTxInfo.parse(tx)
            catch e:
                spell_log(spell_id, ["Failed to parse tx info:", tx, e])
    <- infos 

data WorkerTxStatus:
    tx_info: WorkerTxInfo
    status: string

service JsonWorkerTxStatus("json"):
    parse(str: string) -> WorkerTxStatus

func store_tx_status(spell_id: SpellId, tx_status: WorkerTxStatus):
    list_push(spell_id, TXS_STATUS_KEY, tx_status)