--
-- Decider creates Nox workers based on Chain state
--
-- Copyright (C) 2024 Fluence DAO
--
-- This program is free software: you can redistribute it and/or modify
-- it under the terms of the GNU Affero General Public License as
-- published by the Free Software Foundation version 3 of the
-- License.
--
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU Affero General Public License for more details.
--
-- You should have received a copy of the GNU Affero General Public License
-- along with this program.  If not, see <https://www.gnu.org/licenses/>.
--
aqua Connector declares *

import CUID from "@fluencelabs/aqua-lib/workers.aqua"
import DealId, TxHash, Deal, OnChainWorkerId from "../types.aqua"


data DealInfo:
    -- For comparison, use DEAL_STATUS_* from consts.aqua
    status: string
    cu_ids: []CUID
    app_cid: string
    onchain_worker_id: OnChainWorkerId

func info_to_deal(deal_id: DealId, deal_info: DealInfo) -> Deal:
    <- Deal(
        deal_id = deal_id, 
        status = deal_info.status,
        app_cid = deal_info.app_cid,
        cu_ids = deal_info.cu_ids,
        onchain_worker_id = deal_info.onchain_worker_id
       )

data DealResult:
    success: bool
    error: ?string
    deal_id: DealId
    deal_info: ?DealInfo

data TxInfo:
    deal_id: DealId 
    tx_hash: string

data TxReceipt:
    block_number: string
    tx_hash: TxHash

data TxResult:
    success: bool
    error: ?string
    -- Should be either 'pending', 'failed' or 'ok'
    -- For comparison, use TX_STATUS_* from consts.aqua
    status: string
    -- Should be present when status isn't `pending`
    receipt: ?TxReceipt

service ChainConnector("connector"):
  -- Register a worker on chain
  register_worker(deal_id: string, worker_id: string, onchain_worker_id: OnChainWorkerId) -> TxHash
  -- Get the list of current deals
  get_deals() -> []DealResult
  -- Get transaction receipts for the given transaction hashes
  get_tx_receipts(tx_hashes: []TxHash) -> []TxResult
